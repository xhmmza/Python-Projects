//Password generator with adjustable controls
import tkinter as tk
from tkinter import messagebox
import random
import string

def generate_password():
    length = length_var.get()
    
    if not length.isdigit() or int(length) <= 0:
        messagebox.showerror("Error", "Please enter a valid password length.")
        return
    
    length = int(length)
    
    characters = ""
    if use_uppercase.get():
        characters += string.ascii_uppercase
    if use_lowercase.get():
        characters += string.ascii_lowercase
    if use_digits.get():
        characters += string.digits
    if use_special.get():
        characters += string.punctuation

    if not characters:
        messagebox.showerror("Error", "Please select at least one character type.")
        return

    password = ''.join(random.choice(characters) for _ in range(length))
    password_var.set(password)

root = tk.Tk()
root.title("Password Generator")
root.geometry("400x300")
root.resizable(False, False)

length_var = tk.StringVar()
password_var = tk.StringVar()
use_uppercase = tk.BooleanVar(value=True)
use_lowercase = tk.BooleanVar(value=True)
use_digits = tk.BooleanVar(value=True)
use_special = tk.BooleanVar(value=False)

title_label = tk.Label(root, text="Password Generator", font=("Helvetica", 16))
title_label.pack(pady=10)

length_label = tk.Label(root, text="Password Length:")
length_label.pack(pady=5)

length_entry = tk.Entry(root, textvariable=length_var, width=10)
length_entry.pack()

uppercase_check = tk.Checkbutton(root, text="Include Uppercase Letters", variable=use_uppercase)
uppercase_check.pack(anchor="w", padx=20)

lowercase_check = tk.Checkbutton(root, text="Include Lowercase Letters", variable=use_lowercase)
lowercase_check.pack(anchor="w", padx=20)

digits_check = tk.Checkbutton(root, text="Include Numbers", variable=use_digits)
digits_check.pack(anchor="w", padx=20)

special_check = tk.Checkbutton(root, text="Include Special Characters", variable=use_special)
special_check.pack(anchor="w", padx=20)

generate_button = tk.Button(root, text="Generate Password", command=generate_password)
generate_button.pack(pady=10)

password_label = tk.Label(root, text="Generated Password:")
password_label.pack(pady=5)

password_entry = tk.Entry(root, textvariable=password_var, width=30, state="readonly")
password_entry.pack()

root.mainloop()
